Made cv environment (just use Python 2)

conda install -c conda-forge opencv 
conda install -c lucaszw paho-mqtt 


Guides
https://www.pyimagesearch.com/2015/09/14/ball-tracking-with-opencv/
https://www.digitalocean.com/community/tutorials/how-to-install-and-secure-the-mosquitto-mqtt-messaging-broker-on-ubuntu-16-04


Badly written, but I got the python-pub-sub code from here:
http://www.steves-internet-guide.com/into-mqtt-python-client/


Subscriber
import paho.mqtt.client as mqtt #import the client1
import time
############
def on_message(client, userdata, message):
 print("message received " ,str(message.payload.decode("utf-8")))
 print("message topic=",message.topic)
 print("message qos=",message.qos)
 print("message retain flag=",message.retain)
########################################
broker_address="localhost"
#broker_address="iot.eclipse.org"
print("creating new instance")
client = mqtt.Client("P1") #create new instance
client.username_pw_set("sammy","password")
client.on_message=on_message #attach function to callback
print("connecting to broker")
client.connect(broker_address) #connect to broker
client.loop_start() #start the loop
print("Subscribing to topic","house/bulbs/bulb1")
client.subscribe("house/bulbs/bulb1")
client.subscribe("test2")
print("Publishing message to topic","house/bulbs/bulb1")
client.publish("house/bulbs/bulb1","OFF")
time.sleep(4) # wait
client.loop_stop() #stop the loop


Publisher:
import paho.mqtt.client as mqttClient
from time import sleep
# from camera import PiVideoStream

# this = sys.modules[__name__]

def on_connect(client, userdata, flags, rc):
    if rc == 0:
         print("Connected to broker")
         global Connected
         Connected = True
    else:
         print("Connection failed")

Connected = False

broker_address = "35.197.131.13"
port = 8883

client = mqttClient.Client("Python")
client.username_pw_set("sammy", password="password") #set usrnm and pwd
client.on_connect = on_connect #attach function to callback
client.connect(broker_address, port=port)

for x in range(1000):
	client.publish("test2", x)
	sleep(0.001)